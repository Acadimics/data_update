{"version":3,"sources":["reducers/constrains.js","reducers/fields.js","reducers/index.js","reducers/institutions.js","actions/institutions/types.js","actions/constrains/types.js","actions/fields/types.js","api/index.js","api/axios/index.js","actions/institutions/index.js","actions/fields/index.js","actions/constrains/index.js","components/Institutions/constants.js","components/Institutions/AddInstitution/index.js","components/Institutions/institution/index.js","components/SegmentHeader/index.js","components/Institutions/index.js","components/Fields/AddField/AddInstitution/index.js","components/Fields/AddField/index.js","components/Fields/Field/index.js","components/Fields/index.js","components/Constrains/AddConstrain/index.js","components/Constrains/Constrain/index.js","components/Constrains/index.js","components/App/index.js","index.js"],"names":["initialState","count","items","combineReducers","institutions","institutionId","action","type","payload","id","filter","_id","map","institution","constrains","state","pick","item","reject","fields","axios","port","baseAPIRoute","version","create","headers","apis","serverApis","reduce","acc","name","api","serviceMethod","method","uri","data","apiMethod","then","response","status","Error","catch","err","console","error","createAPI","log","mock","Promise","resolve","setTimeout","fetchInstitutions","dispatch","a","async","getInstitutions","deleteInstitutions","createInstitution","updateInstitution","fetchFields","getFields","createField","createFields","fieldKey","updateField","updateFields","removeField","fetchConstraints","getConstraints","createConstrain","uniqueId","updateConstrain","removeConstrain","DEFAULT_LOCATIONS","ConnectedAddInstitution","connect","institutionsActions","onSubmit","readOnly","useState","setName","logo","setLogo","locations","setLocations","isLoading","setLoading","Option","Select","children","location","key","className","value","onChange","event","target","placeholder","disabled","mode","style","width","defaultValue","loading","onClick","preventDefault","omit","submit","AddInstitutionModal","setTrigger","isAddInstitutionVisible","setAddInstitutionVisible","setInstitution","setReadOnly","useEffect","open","title","visible","onCancel","footer","confirm","Modal","deletInstitution","openModal","setOpenModal","deleteInstitute","onDoubleClick","src","alt","window","faker","image","avatar","join","institutionName","icon","ExclamationCircleOutlined","content","onOk","showDeleteConfirm","SegmentHeader","AddModalComponent","setOpen","searchOptions","onSearch","options","uniq","option","classNames","PlusOutlined","onSelect","filterOption","inputValue","includes","toLowerCase","query","setQuery","institutionNames","filtered","toLocaleLowerCase","setVisible","isEditing","setIsEditing","selectedInstitutions","setSelectedInstitutions","Form","useForm","form","constrainsByScoop","groupBy","selected","editing","setFieldsValue","renderRequierments","scoop","fieldName","selectedConstrain","get","List","add","remove","Item","label","description","requirements","getFieldValue","requierment","find","notification","message","addConstrain","field","fieldProps","required","MinusCircleOutlined","renderRequiermentField","resetFields","onFinish","values","rules","htmlType","Header","Layout","Footer","Content","Sider","Panel","Collapse","buildSubmitConstrains","bagrut","psychometry","constraintId","ConnectedAddField","fieldsActions","setAa","setIsLoading","institutionsById","keyBy","deserialized","constrainsData","constrainsById","constraints","deserialize","renderExtra","stopPropagation","submitData","promise","bordered","defaultActiveKey","header","extra","length","dataSource","size","renderItem","AddFieldModal","setField","currentField","institutionsData","addField","setAddField","edit","FieldName","deleteField","itemLayout","Meta","fieldNames","dimmer","ConnectedAddConstrain","constrainsActions","constrain","scoops","chain","uniqBy","toUpperCase","AddConstrainModal","isVisible","setIsVisible","setIsReadOnly","setUpdateConstrain","constrainDescription","deleteConstrain","setAddConstrain","TabPane","Tabs","App","tab","forceRender","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5c9f08a6.chunk.js","sourcesContent":["import { pick, reject } from 'lodash';\r\nimport { FETCH_CONSTRAINS, CREATE_CONSTRAIN, UPDATE_CONSTRAIN, REMOVE_CONSTRAIN } from \"../actions/constrains/types\";\r\n\r\nconst initialState = {\r\n    count: 0,\r\n    items: []\r\n}\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case FETCH_CONSTRAINS:\r\n            return pick(payload, ['count', 'items']);\r\n        case CREATE_CONSTRAIN:\r\n            return {\r\n                count: state.count + 1,\r\n                items: [...state.items, payload]\r\n            }\r\n        case UPDATE_CONSTRAIN:\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => item._id === payload._id ? payload : item)\r\n            }\r\n        case REMOVE_CONSTRAIN:\r\n            return {\r\n                count: state.count - 1,\r\n                items: reject(state.items, {_id: payload._id})\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { pick, reject } from 'lodash';\r\nimport { FETCH_FIELDS, CREATE_FIELD, UPDATE_FIELD, REMOVE_FIELD } from \"../actions/fields/types\";\r\nimport { DELETE_INSTITUTION } from '../actions/institutions/types';\r\n\r\nconst initialState = {\r\n    count: 0,\r\n    items: []\r\n}\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case CREATE_FIELD:\r\n            return {\r\n                count: state.count + 1,\r\n                items: [...state.items, payload]\r\n            }\r\n        case UPDATE_FIELD:\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => item._id === payload._id ? payload : item)\r\n            }\r\n        case FETCH_FIELDS:\r\n            return pick(payload, ['count', 'items']);\r\n        case REMOVE_FIELD:\r\n            return {\r\n                count: state.count - 1,\r\n                items: reject(state.items, {_id: payload._id})\r\n            }\r\n        case DELETE_INSTITUTION:\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => ({\r\n                    ...item,\r\n                    institutions: reject(item.institutions, {institutionId: payload.id})\r\n                }))\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport institutions from './institutions';\r\nimport constrains from './constrains';\r\nimport fields from './fields';\r\n\r\nexport default combineReducers({\r\n    institutions,\r\n    constrains,\r\n    fields\r\n});","import { FETCH_INSTITUTIONS, CREATE_INSTITUTION, UPDATE_INSTITUTION, DELETE_INSTITUTION } from \"../actions/institutions/types\";\r\n\r\nexport default (institutions = [], action) => {\r\n    var institutionId;\r\n    switch (action.type) {\r\n        case FETCH_INSTITUTIONS:\r\n            return action.payload.items;\r\n        case CREATE_INSTITUTION:\r\n            return [\r\n                ...institutions,\r\n                action.payload\r\n            ];\r\n        case DELETE_INSTITUTION:\r\n            institutionId = action.payload.id;\r\n            return institutions.filter(({_id}) => _id !== institutionId);\r\n        case UPDATE_INSTITUTION:\r\n            institutionId = action.payload.id;\r\n            action.payload._id = institutionId;\r\n            return institutions.map((institution) => institution._id === institutionId ? action.payload : institution);\r\n        default:\r\n            return institutions;\r\n    }\r\n}","export const FETCH_INSTITUTIONS = 'FETCH_INSTITUTIONS';\r\nexport const CREATE_INSTITUTION = 'CREATE_INSTITUTION';\r\nexport const DELETE_INSTITUTION = 'DELETE_INSTITUTION';\r\nexport const UPDATE_INSTITUTION = 'UPDATE_INSTITUTION';","export const FETCH_CONSTRAINS = 'FETCH_CONSTRAINS';\r\nexport const CREATE_CONSTRAIN = 'CREATE_CONSTRAIN';\r\nexport const UPDATE_CONSTRAIN = 'UPDATE_CONSTRAIN';\r\nexport const REMOVE_CONSTRAIN = 'REMOVE_CONSTRAIN';","export const FETCH_FIELDS = 'FETCH_FIELDS';\r\nexport const FETCH_CONSTRAINS = 'FETCH_CONSTRAINS';\r\nexport const CREATE_FIELD = 'CREATE_FIELD';\r\nexport const UPDATE_FIELD = 'UPDATE_FIELD';\r\nexport const REMOVE_FIELD = 'REMOVE_FIELD';","import { port, baseAPIRoute, version, APIs as serverApis } from '../server.config';\r\nimport { createAPI, creatAxios } from './axios';\r\n\r\nconst axios = creatAxios(`http://localhost:${port}${baseAPIRoute}/v${version}`);\r\n\r\nconst apis = serverApis.reduce((acc, {name, ...api}) => ({\r\n        ...acc,\r\n        [name]: createAPI(axios, api)\r\n    }), {});\r\n\r\nconsole.log(apis);\r\n\r\napis.mock = (data) =>  new Promise(resolve => setTimeout(() => {\r\n    console.log(data);\r\n    resolve(data);\r\n}, 2000));\r\n\r\nexport default apis;","import axios from 'axios';\r\n\r\nexport const creatAxios = (baseURL) => axios.create({\r\n    //baseURL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport const createAPI = (axios, {serviceMethod, method, uri}) => (data = {}) => {\r\n    const apiMethod = method || serviceMethod;\r\n    return axios[apiMethod](`/api/v1/${uri}`, data)\r\n        .then(response => {\r\n\r\n            if (response.status !== 200){\r\n                throw new Error(`/${uri} returned status ${response.status}`)\r\n            }\r\n\r\n            return response.data; \r\n        })\r\n        .catch(err => {\r\n            console.error(err, `Request failed - ${apiMethod}`, data);\r\n            return [];\r\n        })\r\n}","import api from '../../api';\r\nimport { FETCH_INSTITUTIONS, DELETE_INSTITUTION, CREATE_INSTITUTION, UPDATE_INSTITUTION } from './types';\r\n\r\nexport const fetchInstitutions = () => async dispatch => {\r\n    const institutions = await api.getInstitutions();\r\n\r\n    dispatch({\r\n        type: FETCH_INSTITUTIONS,\r\n        payload:  institutions\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const deleteInstitutions = (id) => async dispatch => {\r\n    await api.deleteInstitutions({id});\r\n\r\n    dispatch({\r\n        type: DELETE_INSTITUTION,\r\n        payload:  {id}\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const createInstitution = (data) => async dispatch => {\r\n    const {id} = await api.createInstitution(data);\r\n\r\n    dispatch({\r\n        type: CREATE_INSTITUTION,\r\n        payload:  {...data, _id: id}\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const updateInstitution = (data) => async dispatch => {\r\n    await api.updateInstitution(data);\r\n\r\n    dispatch({\r\n        type: UPDATE_INSTITUTION,\r\n        payload:  data\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\n","import api from '../../api';\r\nimport { FETCH_FIELDS, CREATE_FIELD, UPDATE_FIELD, REMOVE_FIELD } from './types';\r\n\r\nexport const fetchFields = () => async dispatch => {\r\n    const fields = await api.getFields();\r\n\r\n    dispatch({\r\n        type: FETCH_FIELDS,\r\n        payload: fields\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const createField = (data) => async dispatch => {\r\n    const { fieldKey } = await api.createFields(data);\r\n\r\n    dispatch({\r\n        type: CREATE_FIELD,\r\n        payload: { ...data, _id: fieldKey }\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const updateField = (data) => async dispatch => {\r\n    await api.updateFields(data);\r\n\r\n    dispatch({\r\n        type: UPDATE_FIELD,\r\n        payload: data\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const removeField = (data) => async dispatch => {\r\n    await api.removeField(data);\r\n\r\n    dispatch({\r\n        type: REMOVE_FIELD,\r\n        payload: data\r\n    });\r\n\r\n    return true;\r\n};","import api from '../../api';\r\nimport { uniqueId } from 'lodash';\r\nimport { FETCH_CONSTRAINS, CREATE_CONSTRAIN, UPDATE_CONSTRAIN, REMOVE_CONSTRAIN } from './types';\r\n\r\nexport const fetchConstraints = () => async dispatch => {\r\n    const constrains = await api.getConstraints();\r\n\r\n    dispatch({\r\n        type: FETCH_CONSTRAINS,\r\n        payload: constrains\r\n    });\r\n};\r\n\r\nexport const createConstrain = (data) => async dispatch => {\r\n    // await api.createConstrain(data);\r\n    const _id = await api.mock(uniqueId());\r\n\r\n    dispatch({\r\n        type: CREATE_CONSTRAIN,\r\n        payload: {...data, _id}\r\n    })\r\n}\r\n\r\nexport const updateConstrain = (data) => async dispatch => {\r\n    // await api.updateConstrain(data);\r\n    await api.mock(data);\r\n\r\n    dispatch({\r\n        type: UPDATE_CONSTRAIN,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const removeConstrain = (data) => async dispatch => {\r\n    // await api.updateConstrain(data);\r\n    await api.mock(data);\r\n\r\n    dispatch({\r\n        type: REMOVE_CONSTRAIN,\r\n        payload: data\r\n    })\r\n}","export const DEFAULT_LOCATIONS = [\r\n    'צפון',\r\n    'דרום',\r\n    'מרכז',\r\n    'שפלה',\r\n    'ירושלים',\r\n    'שרון'\r\n]","import React, { useState, useEffect } from 'react';\r\nimport { omit } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, Select } from 'antd';\r\nimport { institutionsActions } from '../../../actions'\r\nimport { DEFAULT_LOCATIONS } from '../constants';\r\n\r\nconst AddInstitution = ({ onSubmit, institution = {}, createInstitution, \r\n        updateInstitution, readOnly = false }) => {\r\n    const [name, setName] = useState(institution.name || \"\");\r\n    const [logo, setLogo] = useState(institution.logo || \"\");\r\n    const [locations, setLocations] = useState(institution.locations || [DEFAULT_LOCATIONS[0]]);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const { Option } = Select;\r\n\r\n    const children = DEFAULT_LOCATIONS.map(location => <Option key={location}>{location}</Option>);\r\n\r\n    const submit = async (data) => {\r\n        setLoading(true);\r\n        const institutionId = institution._id;\r\n        institutionId ? \r\n            await updateInstitution({\r\n                ...omit(institution, '_id'),\r\n                id: institutionId,\r\n                ...data\r\n            }) : \r\n            await createInstitution(data);\r\n        setLoading(false);\r\n\r\n        onSubmit && onSubmit();\r\n    }\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = {\r\n            name,\r\n            locations,\r\n            logo\r\n        };\r\n\r\n        submit(data);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label>Institiution Name</label>\r\n                <input type=\"text\" name=\"name\" value={name} readOnly={readOnly}\r\n                    onChange={(event => setName(event.target.value))}\r\n                    placeholder=\"Institution Name\"/>\r\n            </div>\r\n            <div className=\"field\">\r\n                <label>Location</label>\r\n                <Select disabled={readOnly}\r\n                    mode=\"multiple\"\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"Locations\"\r\n                    defaultValue={locations}\r\n                    onChange={(value) => {setLocations(value)}}>\r\n                    {children}\r\n                </Select>\r\n            </div>\r\n            <div className=\"field\">\r\n                <label>Logo</label>\r\n                <input type=\"text\" name=\"logo\" value={logo} readOnly={readOnly}\r\n                    onChange={(event => setLogo(event.target.value))}\r\n                    placeholder=\"Institution Logo\"/>\r\n            </div>\r\n            <Button type=\"primary\" disabled={readOnly} \r\n                loading={isLoading} onClick={onFormSubmit}>Submit</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ConnectedAddInstitution = connect(null, {\r\n    createInstitution: institutionsActions.createInstitution,\r\n    updateInstitution: institutionsActions.updateInstitution\r\n})(AddInstitution);\r\n\r\nconst AddInstitutionModal = ({ setTrigger }) => {\r\n    const [isAddInstitutionVisible, setAddInstitutionVisible] = useState(false);\r\n    const [institution, setInstitution] = useState(false);\r\n    const [readOnly, setReadOnly] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTrigger({open});\r\n    }, []);\r\n\r\n    const title = institution ? `Update ${institution.name}` : 'Add Institiution';\r\n\r\n    const onSubmit = () => {\r\n        setAddInstitutionVisible(false);\r\n    }\r\n\r\n    const open = ({institution, readOnly = false}) => {\r\n        setReadOnly(readOnly);\r\n        institution && setInstitution(institution);\r\n        setAddInstitutionVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal title={title}\r\n                visible={isAddInstitutionVisible}\r\n                onCancel={() => setAddInstitutionVisible(false)}\r\n                footer={null}>\r\n                <ConnectedAddInstitution onSubmit={onSubmit} institution={institution} readOnly={readOnly}/>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {AddInstitution, AddInstitutionModal};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { institutionsActions } from '../../../actions'\r\nimport { AddInstitutionModal } from '../AddInstitution';\r\n\r\nimport './style.scss'\r\n\r\nconst { confirm } = Modal;\r\n\r\nfunction showDeleteConfirm(institutionName, deleteInstitute) {\r\n  confirm({\r\n    title: 'Are you sure you want to delete this institution?',\r\n    icon: <ExclamationCircleOutlined />,\r\n    content: `When clicked the OK button, ${institutionName} will be deleted`,\r\n    onOk() {\r\n      return deleteInstitute();\r\n    },\r\n    onCancel() {},\r\n  });\r\n}\r\n\r\nconst Institution = ({ deletInstitution, updateInstitution, ...institution}) => {\r\n    const { name, locations = [], type , _id, logo } = institution;\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const setOpenModalTrigger = ({open}) => {\r\n        !openModal && setOpenModal(() => open);\r\n    }\r\n\r\n    const deleteInstitute = async () => {\r\n        await deletInstitution(_id);\r\n    }\r\n\r\n    const onDoubleClick = () => {\r\n        openModal({institution, readOnly: true})\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" onDoubleClick={onDoubleClick}>\r\n            <div className=\"content description\">\r\n                <img className=\"right floated mini ui image\" src=\"/images/avatar/large/elliot.jpg\" alt=\"\" />\r\n                <div className=\"header\">\r\n                    <img className=\"ui avatar image\" src={logo || window.faker.image.avatar()}/>\r\n                    {name}\r\n                </div>\r\n                <div className=\"meta\">\r\n                    {locations.join(', ')}\r\n                </div>\r\n                <div className=\"description\">\r\n                    this is institution description\r\n                </div>\r\n            </div>\r\n            <div className=\"extra content\">\r\n                <div className=\"ui two buttons\">\r\n                    <AddInstitutionModal setTrigger={setOpenModalTrigger}/>\r\n                    <div className=\"ui basic green button\" onClick={() => openModal(institution)}>Update</div>\r\n                    <div className=\"ui basic red button active\" onClick={()=> showDeleteConfirm(name, deleteInstitute)} >\r\n                        Delete\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, {\r\n    deletInstitution: institutionsActions.deleteInstitutions,\r\n    updateInstitution: institutionsActions.updateInstitution\r\n})(Institution);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { includes, uniq } from 'lodash';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Button, AutoComplete } from 'antd';\r\n\r\nimport './style.scss';\r\n\r\nconst SegmentHeader = ({ title, onClick, icon, AddModalComponent,\r\n        setOpen, searchOptions = [], onSearch }) => {\r\n\r\n    const setModalTrigger = ({open}) => {\r\n        setOpen(() => open);\r\n    }\r\n\r\n    const options = uniq(searchOptions).map(option => ({value: option}));\r\n    const filterOption = (inputValue, option) => \r\n        includes(option.value.toLowerCase(), inputValue.toLowerCase())\r\n\r\n    return (\r\n        <h2 className=\"ui segment-header header\">\r\n            <i className={classNames(icon, \"icon\")}></i>\r\n            <div className=\"content\">\r\n                {title}\r\n            </div>\r\n            <div className=\"sub header\">\r\n                <AddModalComponent setTrigger={setModalTrigger}/>\r\n                <Button type=\"primary\" icon={<PlusOutlined />} onClick={onClick}>\r\n                        Add Item\r\n                </Button>\r\n                <AutoComplete className='search' onSearch={onSearch} \r\n                    placeholder={`search for ${title}`} onSelect={onSearch}\r\n                    filterOption={filterOption} options={options}/>\r\n            </div>\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default SegmentHeader;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { map, filter, includes } from 'lodash';\r\nimport { institutionsActions } from '../../actions'\r\nimport Institution from './institution';\r\nimport SegmentHeader from '../SegmentHeader';\r\nimport { AddInstitutionModal } from './AddInstitution';\r\n\r\nimport './style.scss';\r\n\r\nconst Institutions = ({ institutions, fetchInstitutions}) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const institutionNames = map(institutions, 'name');\r\n\r\n    const getInstitutions = async () => {\r\n        setLoading(true);\r\n        await fetchInstitutions();\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect( () => {\r\n        getInstitutions();\r\n    }, [])\r\n\r\n    const filtered = filter(institutions, ({name}) => \r\n        includes(name.toLowerCase(), query.toLocaleLowerCase()));\r\n\r\n    return (\r\n        <div className=\"institutions\">\r\n            <SegmentHeader title=\"Institutions\" onClick={openModal} icon=\"university\"\r\n                searchOptions={institutionNames} onSearch={setQuery}\r\n                AddModalComponent={AddInstitutionModal} setOpen={setOpenModal} />\r\n            <div className={`ui segment ${loading ? 'is-loading' : ''}`}>\r\n                <div className={`ui active inverted ${loading ? 'dimmer' : ''}`}>\r\n                    {loading && <div className=\"ui massive text loader\">Loading</div>}\r\n                    {!loading && (\r\n                        <div className=\"ui cards\">\r\n                            {filtered.map((institution) => (\r\n                                <Institution {...institution} key={institution._id}/>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ institutions }) => {\r\n    return {institutions}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchInstitutions: institutionsActions.fetchInstitutions\r\n})(Institutions);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { groupBy, find, reject, get } from 'lodash';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Modal, Button, Select, InputNumber, Form, notification  } from 'antd';\r\n\r\nimport './style.scss';\r\n\r\nconst Option = Select.Option;\r\n\r\nconst AddInstitution = ({ institutions, constrains, onChange, setTrigger }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [selectedInstitutions, setSelectedInstitutions] = useState(institutions);\r\n    const [form] = Form.useForm();\r\n\r\n    const constrainsByScoop = groupBy(constrains.items, 'scoop');\r\n\r\n    const getAvailable = () => reject(institutions, ({ _id }) => selectedInstitutions.includes(_id))\r\n\r\n    useEffect(() => {\r\n        setTrigger({open});\r\n    }, []);\r\n\r\n    const open = ({ institution = {}, selected }) => {\r\n        const editing = !!institution.institutionId;\r\n\r\n        setSelectedInstitutions(reject(selected, (id) => id === institution.institutionId));\r\n        \r\n        if(editing){\r\n            form.setFieldsValue(institution)\r\n        }\r\n\r\n        setIsEditing(editing);\r\n        setVisible(true);\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n        onChange(values);\r\n        form.resetFields();\r\n        setVisible(false);\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const renderInstitution = () => (\r\n        <Form.Item label=\"Institution\" name=\"institutionId\"\r\n            rules={[{ required: true, message: 'Please select institution' }]}>\r\n            <Select placeholder=\"Select institute\" >\r\n                {getAvailable().map((institution) => (\r\n                    <Option key={institution._id} value={institution._id}>{institution.name}</Option>\r\n                ))}\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    const renderRequierments = ({scoop, constrains}) => {\r\n        const fieldName = ['requirements', scoop];\r\n        let selectedConstrain = get(constrains, '[0]._id');\r\n\r\n        const addConstrain = (add) => {\r\n            const requirements = form.getFieldValue(fieldName);\r\n            const requierment = find(requirements, { _id: selectedConstrain });\r\n\r\n            if(requierment){\r\n                notification.error({\r\n                    message: `requierment ${requierment.description} is already selected`,\r\n                    description: 'you cant select same requierment more than once'\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            add(find(constrains, { _id: selectedConstrain }));\r\n        }\r\n\r\n        const renderRequiermentField = ({name, key}, remove) => {\r\n\r\n            const fieldProps = form.getFieldValue([...fieldName,name]);\r\n            fieldProps.value = fieldProps.value || 0;\r\n            \r\n            return (            \r\n                <Form.Item key={key} label={fieldProps.description}>\r\n                    <InputNumber type=\"number\" onChange={(value)=> fieldProps.value = value} \r\n                        defaultValue={fieldProps.value } required/>\r\n                    <Button type=\"link\" onClick={() => remove(name)}><MinusCircleOutlined/> remove</Button>\r\n                </Form.Item>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Form.List name={fieldName}>\r\n                {(fields, { add, remove }) => (\r\n                    <div className='requirements'>\r\n                        <Form.Item label={scoop} className=\"selector\">\r\n                            <Select onChange={(value) => selectedConstrain = value} defaultValue={selectedConstrain}>\r\n                                {constrains.map(({description, _id: id}) => (\r\n                                    <Option key={id} value={id}>{description}</Option>\r\n                                ))}\r\n                            </Select>\r\n                            <Button type=\"link\" onClick={() => addConstrain(add)}> <PlusOutlined /> add </Button>\r\n                        </Form.Item>\r\n                        {fields.map(field => renderRequiermentField(field, remove))}\r\n                    </div>\r\n                )}\r\n            </Form.List>\r\n        );\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setVisible(false);\r\n        setIsEditing(false);\r\n        isEditing && form.resetFields();\r\n    }\r\n    \r\n    return (\r\n        <Modal title=\"Institution\" visible={visible} onCancel={onCancel} footer={null}>\r\n            <Form form={form} name=\"constrains\" onFinish={onFinish} className=\"field-add-institution\" >\r\n                {renderInstitution()}\r\n                {renderRequierments({scoop: 'bagrut', constrains: constrainsByScoop['bagrut']})}\r\n                {renderRequierments({scoop: 'psychometry', constrains: constrainsByScoop['psychometry']})}\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"submit-btn\">\r\n                        {isEditing ? 'Update' : 'Add'}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ institutions, constrains}) => ({\r\n    institutions,\r\n    constrains\r\n})\r\n\r\nexport default connect(mapStateToProps)(AddInstitution);","import React, { useState, useEffect } from 'react';\r\nimport { groupBy, keyBy, map, reject } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, Select, Layout, Form, Input, Collapse, List } from 'antd';\r\nimport { fieldsActions } from '../../../actions/index'\r\nimport AddInstitution from './AddInstitution';\r\n\r\nimport './style.scss'\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst { Panel } = Collapse;\r\n\r\nconst buildSubmitConstrains = ({ bagrut = [], psychometry = [] }) =>\r\n    [...bagrut, ...psychometry].map(({ _id, value }) => ({\r\n        constraintId: _id,\r\n        value\r\n    }))\r\n\r\nconst deserialize = (field, constrainsData) => {\r\n    const { name, _id, institutions } = field;\r\n\r\n    const constrainsById = keyBy(constrainsData.items, '_id');\r\n\r\n    const getConstraintsByScoop = (constrains) => groupBy(\r\n        constrains.map(({ constraintId, value }) => ({\r\n            ...constrainsById[constraintId],\r\n            value\r\n        })), 'scoop');\r\n\r\n    return {\r\n        _id,\r\n        name,\r\n        institutions: institutions.map(({ institutionId, requirements: { constraints = [] } = {} }) => ({\r\n            institutionId,\r\n            requirements: getConstraintsByScoop(constraints)\r\n        }))\r\n    }\r\n}\r\n\r\nconst AddField = ({ institutions = [], constrains, field, createField, \r\n        onSubmit, updateField, readOnly = false }) => {\r\n    const [selectedInstitutions, setAa] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [editing, setIsEditing] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n    const institutionsById = keyBy(institutions, '_id');\r\n\r\n    useEffect(() => {\r\n        if (field) {\r\n            const deserialized = deserialize(field, constrains);\r\n            setAa(deserialized.institutions);\r\n            form.setFieldsValue({ name: field.name })\r\n        }\r\n    }, [field])\r\n\r\n    const onFinish = async (values) => {\r\n        const submitData = {\r\n            ...values,\r\n            institutions: selectedInstitutions.map(({ institutionId, requirements }) => ({\r\n                institutionId,\r\n                requirements: {\r\n                    constraints: buildSubmitConstrains(requirements)\r\n                }\r\n            }))\r\n        };\r\n\r\n        const promise = field ?\r\n            updateField({ ...field, ...submitData, fieldKey: field._id }) :\r\n            createField(submitData);\r\n\r\n        setIsLoading(true);\r\n        await promise;\r\n        setIsLoading(false);\r\n        onSubmit({ ...field || {}, ...submitData });\r\n        setAa([]);\r\n        form.resetFields();\r\n    }\r\n\r\n    const onChange = (data) => {\r\n        if (data) {\r\n            let selected = [...selectedInstitutions];\r\n\r\n            if (editing) {\r\n                setIsEditing(false);\r\n                selected = reject(selectedInstitutions, { institutionId: data.institutionId })\r\n            }\r\n\r\n            setAa([...selected, data]);\r\n        }\r\n    }\r\n\r\n    const addInstitution = () => {\r\n        open({ selected: map(selectedInstitutions, 'institutionId') });\r\n    }\r\n\r\n    const renderExtra = (institution) => {\r\n\r\n        const onEdit = (event) => {\r\n            event && event.stopPropagation();\r\n            setIsEditing(true);\r\n            open({\r\n                institution,\r\n                selected: map(selectedInstitutions, 'institutionId')\r\n            })\r\n        }\r\n\r\n        const onRemove = (event) => {\r\n            event && event.stopPropagation();\r\n            setAa(reject(selectedInstitutions, institution));\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Button type=\"primary\" disabled={readOnly} onClick={onEdit}>Edit</Button>\r\n                <Button type=\"primary\" disabled={readOnly} onClick={onRemove}>Remove</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderInstitution = (institution) => {\r\n        const { institutionId, requirements } = institution;\r\n\r\n        return (\r\n            <Panel header={institutionsById[institutionId].name} key={institutionId} extra={renderExtra(institution)}>\r\n                {map(requirements, (values, header) => values && values.length ? (\r\n                    <List header={<b>{header}</b>} key={header} dataSource={values} size=\"small\"\r\n                        renderItem={({ description, value }) => (\r\n                            <List.Item>\r\n                                {description}:{value}\r\n                            </List.Item>\r\n                        )} />\r\n                ) : null)}\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form form={form} onFinish={onFinish}>\r\n            <Layout>\r\n                <Header>\r\n                    <Form.Item label=\"Name\" name=\"name\"\r\n                        rules={[{ required: true, message: 'Please enter field name' }]}>\r\n                        <Input defaultValue={field ? field.name : ''} readOnly={readOnly} />\r\n                    </Form.Item>\r\n                </Header>\r\n                <Layout className=\"institutions\">\r\n                    <Content>\r\n                        <Collapse bordered={false} defaultActiveKey={['1']}>\r\n                            {selectedInstitutions.map(renderInstitution)}\r\n                        </Collapse>\r\n                        <AddInstitution setTrigger={({ open }) => setOpen(() => open)} onChange={onChange} />\r\n                        <Button onClick={addInstitution} disabled={readOnly}> Add institution </Button>\r\n                    </Content>\r\n                </Layout>\r\n                <Footer>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} disabled={readOnly}>\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Footer>\r\n            </Layout>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ institutions, constrains }) => ({\r\n    institutions,\r\n    constrains\r\n});\r\n\r\nconst ConnectedAddField = connect(mapStateToProps, {\r\n    createField: fieldsActions.createField,\r\n    updateField: fieldsActions.updateField\r\n})(AddField);\r\n\r\nconst AddFieldModal = ({ setTrigger }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [field, setField] = useState(null);\r\n    const [readOnly, setReadOnly] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTrigger({ open });\r\n    }, []);\r\n\r\n    const open = ({ currentField, readOnly = false }) => {\r\n        currentField && setField(currentField);\r\n        setReadOnly(readOnly);\r\n        setVisible(true);\r\n    };\r\n\r\n    const title = field ? `Update ${field.name}` : 'Create new field';\r\n\r\n    return (\r\n        <>\r\n            <Modal title={title}\r\n                visible={visible}\r\n                onCancel={() => setVisible(false)}\r\n                width=\"85%\"\r\n                footer={null}>\r\n                <ConnectedAddField field={field} onSubmit={() => setVisible(false)} readOnly={readOnly} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { AddField, AddFieldModal };","import React, {useState} from 'react';\r\nimport { keyBy } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Card, Button, List, Avatar, Modal } from 'antd';\r\nimport { fieldsActions } from '../../../actions';\r\nimport { AddFieldModal } from '../AddField';\r\n\r\nimport './style.scss';\r\n\r\nconst { confirm } = Modal;\r\n\r\nfunction showDeleteConfirm(FieldName, deleteField) {\r\n    confirm({\r\n      title: 'Are you sure you want to delete this field?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: `When clicked the OK button, ${FieldName} will be deleted`,\r\n      onOk() {\r\n        return deleteField();\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\nconst Field = ({institutionsData, removeField, ...field}) => {\r\n    const { name } = field;\r\n    const [addField, setAddField] = useState(null);\r\n\r\n    const institutionsById = keyBy(institutionsData, '_id');\r\n\r\n    const edit = () => {\r\n        addField({currentField: field})\r\n    }\r\n\r\n    const remove = () => {\r\n        showDeleteConfirm(name, () => removeField({...field, fieldKey: field._id}));\r\n    }\r\n\r\n    const setModalTrigger = ({open}) => {\r\n        setAddField(() => open);\r\n    }\r\n\r\n    const onDoubleClick = () => {\r\n        addField({currentField: field, readOnly: true})\r\n    }\r\n    \r\n    const renderTitle = () => (\r\n        <>\r\n            {name}\r\n            <div className=\"buttons\">\r\n                <Button size=\"small\" onClick={edit}> Edit </Button>\r\n                <Button size=\"small\" onClick={remove}> remove </Button>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <Card title={renderTitle()} size=\"small\" className=\"field\" onDoubleClick={onDoubleClick}>\r\n            <AddFieldModal setTrigger={setModalTrigger}/>\r\n            <List size=\"small\" dataSource={field.institutions} itemLayout=\"horizontal\" \r\n                renderItem={({institutionId}) => \r\n                        (<List.Item>\r\n                            {institutionsById[institutionId] ? \r\n                                <List.Item.Meta \r\n                                    avatar={<Avatar \r\n                                        size=\"small\"\r\n                                        src={institutionsById[institutionId].logo || \"\"}\r\n                                        />}\r\n                                    description={institutionsById[institutionId].name}/> :\r\n                                <span>can't find institution with id - {institutionId}</span>\r\n                            }\r\n                        </List.Item>)\r\n                }/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ institutions }) => ({\r\n    institutionsData: institutions\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    removeField: fieldsActions.removeField\r\n})(Field);","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { filter, includes, map } from 'lodash'; \r\nimport { connect } from 'react-redux';\r\nimport { fieldsActions } from '../../actions'\r\nimport SegmentHeader from '../SegmentHeader';\r\nimport { AddFieldModal } from './AddField';\r\nimport Field from './Field';\r\n\r\nimport './style.scss';\r\n\r\nconst Fields = ({ fields = { item: [] }, fetchFields }) => {\r\n    const [addField, setAddField] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const fieldNames = map(fields.items, 'name');\r\n\r\n    const getFields = async () => {\r\n        setLoading(true);\r\n        await fetchFields();\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect( () => {\r\n        getFields();\r\n    }, []);\r\n\r\n    const filtered = filter(fields.items, ({name}) => \r\n        includes(name.toLowerCase(), query.toLocaleLowerCase()));\r\n\r\n    return (\r\n        <div className=\"fields\">\r\n            <SegmentHeader title=\"Fields\" onClick={addField} icon=\"newspaper outline\"\r\n                searchOptions={fieldNames} onSearch={setQuery}\r\n                AddModalComponent={AddFieldModal} setOpen={setAddField} />\r\n            <div className={classNames('ui segment', {'is-loading': loading})}>\r\n                <div className={classNames('cards-wrapper ui active inverted', {dimmer: loading})}>\r\n                    {loading && <div className=\"ui massive text loader\">Loading</div>}\r\n                    {!loading && filtered.map((field) => (\r\n                        <Field {...field} key={field._id}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ fields }) => ({\r\n    fields\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchFields: fieldsActions.fetchFields\r\n})(Fields);","import React, { useState, useEffect } from 'react';\r\nimport { chain, includes } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, AutoComplete , Form, Input } from 'antd';\r\nimport { constrainsActions } from '../../../actions'\r\n\r\nimport './style.scss';\r\n\r\nconst AddConstrain = ({constrain, constrains, onSubmit, createConstrain, updateConstrain, readOnly}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        constrain && form.setFieldsValue(constrain);\r\n    }, [constrain])\r\n\r\n    const scoops = chain(constrains.items)\r\n        .uniqBy('scoop')\r\n        .map(({scoop}) => ({value: scoop}))\r\n        .value();\r\n\r\n    const filterOption = (inputValue, option) => \r\n        includes(option.value.toUpperCase(), inputValue.toUpperCase())\r\n\r\n    const submit = async (values) => {\r\n        const promise = constrain ? \r\n            updateConstrain({...constrain, ...values}) : \r\n            createConstrain(values);\r\n            \r\n        setIsLoading(true);\r\n        await promise;\r\n        setIsLoading(false);\r\n    } \r\n\r\n    const onFinish = async(values) => {\r\n        await submit(values);\r\n        onSubmit(values);\r\n        form.resetFields();\r\n    }\r\n\r\n    return (\r\n        <Form form={form} onFinish={onFinish} className=\"add-constrain-form\">\r\n            <Form.Item label=\"description\" \r\n                rules={[{ required: true, message: 'Please enter description!' }]} \r\n                name=\"description\">\r\n                <Input type=\"text\" readOnly={readOnly}/>\r\n            </Form.Item>\r\n            <Form.Item name=\"scoop\" \r\n                rules={[{ required: true, message: 'Please enter description!' }]} \r\n                label=\"scoop\">\r\n                <AutoComplete options={scoops} filterOption={filterOption} disabled={readOnly}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} disabled={readOnly}\r\n                     className=\"submit-btn\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ constrains }) => ({\r\n    constrains\r\n})\r\n\r\nconst ConnectedAddConstrain = connect(mapStateToProps,{\r\n    createConstrain: constrainsActions.createConstrain,\r\n    updateConstrain: constrainsActions.updateConstrain\r\n})(AddConstrain);\r\n\r\nconst AddConstrainModal = ({ setTrigger, constrain }) => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [readOnly, setIsReadOnly] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTrigger({open});\r\n    }, []);\r\n\r\n    const title = constrain ? `Update ${constrain.description}` : 'Add Constrain';\r\n\r\n    const onSubmit = () => {\r\n        setIsVisible(false);\r\n    }\r\n\r\n    const open = ({readOnly}) => {\r\n        setIsReadOnly(!!readOnly);\r\n        setIsVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal title={title}\r\n                visible={isVisible}\r\n                onCancel={() => setIsVisible(false)}\r\n                footer={null}>\r\n                <ConnectedAddConstrain onSubmit={onSubmit} constrain={constrain} readOnly={readOnly} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddConstrainModal;","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Button, Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { constrainsActions } from '../../../actions';\r\nimport AddConstrainModal from '../AddConstrain'\r\n\r\nimport './style.scss';\r\n\r\nconst { confirm } = Modal;\r\n\r\nfunction showDeleteConfirm(constrainDescription, deleteConstrain) {\r\n    confirm({\r\n      title: 'Are you sure you want to delete this constrain?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: `When clicked the OK button, ${constrainDescription} will be deleted`,\r\n      onOk() {\r\n        return deleteConstrain();\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n\r\nconst Constrain = ({removeConstrain, ...constrain}) => {\r\n    const { description, scoop } = constrain;\r\n    const [updateConstrain, setUpdateConstrain] = useState(null);\r\n\r\n    const setModalTrigger = ({open}) => {\r\n        setUpdateConstrain(() => open);\r\n    }\r\n\r\n    const remove = () => {\r\n        showDeleteConfirm(constrain.description, () => removeConstrain(constrain))\r\n    }\r\n\r\n    const onDoubleClick = () => updateConstrain({readOnly: true});\r\n\r\n    const renderTitle = () => (\r\n        <>\r\n            {description}\r\n            <div className=\"buttons\">\r\n                <Button size=\"small\" onClick={updateConstrain}> Edit </Button>\r\n                <Button size=\"small\" onClick={remove}> remove </Button>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n    return (\r\n        <Card title={renderTitle()} size=\"small\" className=\"constrain\" onDoubleClick={onDoubleClick}>\r\n            <AddConstrainModal setTrigger={setModalTrigger} constrain={constrain}/>\r\n            {scoop}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default connect(null, {\r\n    removeConstrain: constrainsActions.removeConstrain\r\n})(Constrain);","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { filter, includes, map } from 'lodash'; \r\nimport { constrainsActions } from '../../actions'\r\nimport SegmentHeader from '../SegmentHeader';\r\nimport AddConstrainModal from './AddConstrain';\r\nimport Constrain from './Constrain';\r\n\r\nimport './style.scss';\r\n\r\nconst Constrains = ({ constrains, fetchConstraints }) => {\r\n    const [addConstrain, setAddConstrain] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n\r\n    const constrainDescription = map(constrains.items, 'description');\r\n\r\n    const getConstraints = async () => {\r\n        setLoading(true);\r\n        await fetchConstraints();\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect( () => {\r\n        getConstraints();\r\n    }, []);\r\n\r\n    const filtered = filter(constrains.items, ({description}) => \r\n        includes(description.toLowerCase(), query.toLocaleLowerCase()));\r\n\r\n    return (\r\n        <div className=\"constrains\">\r\n            <SegmentHeader title=\"Constrains\" onClick={addConstrain} icon=\"tasks\"\r\n                searchOptions={constrainDescription} onSearch={setQuery}\r\n                AddModalComponent={AddConstrainModal} setOpen={setAddConstrain} />\r\n            <div className={classNames('ui segment', {'is-loading': loading})}>\r\n                <div className={classNames('cards-wrapper ui active inverted', {dimmer: loading})}>\r\n                    {loading && <div className=\"ui massive text loader\">Loading</div>}\r\n                    {!loading && filtered.map((constrain) => (\r\n                        <Constrain key={constrain._id} {...constrain}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ constrains }) => ({\r\n    constrains\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchConstraints: constrainsActions.fetchConstraints\r\n})(Constrains);","import React from \"react\";\r\nimport Institutions from \"../Institutions\";\r\nimport { Tabs } from 'antd';\r\nimport Fiedls from \"../Fields\";\r\nimport Constrains from \"../Constrains\";\r\n\r\nimport './style.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"data-update-app\">\r\n            <Tabs defaultActiveKey=\"2\">\r\n                <TabPane tab=\"Institutions\" key=\"1\" forceRender={true}>\r\n                    <Institutions/>\r\n                </TabPane>\r\n                <TabPane tab=\"Fields\" key=\"2\" forceRender={true}>\r\n                    <Fiedls/>\r\n                </TabPane>\r\n                <TabPane tab=\"Constrains\" key=\"3\" forceRender={true}>\r\n                    <Constrains/>\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\nimport App from './components/App';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './style.scss';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(\r\n    reducers, \r\n    composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}